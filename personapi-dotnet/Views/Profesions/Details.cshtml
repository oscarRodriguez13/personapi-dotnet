@model personapi_dotnet.Models.Entities.Profesion

@{
    ViewData["Title"] = "Detalles de la Profesión";
}

<div class="card shadow-sm fade-in mb-4">
    <div class="card-header bg-gradient">
        <div class="d-flex align-items-center">
            <div class="icon-circle">
                <i class="fas fa-briefcase"></i>
            </div>
            <div>
                <h4 class="mb-0 fw-bold">Detalles de la Profesión</h4>
                <p class="text-muted small mb-0">Información detallada sobre la profesión seleccionada</p>
            </div>
        </div>
    </div>

    <div class="card-body">
        <h4>Detalles</h4>
        <hr />
        <dl class="row">
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Nom)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Nom)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Des)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Des)
            </dd>
        </dl>
    </div>

    <div class="card-footer text-muted">
        <div class="d-flex justify-content-between align-items-center">
            <a asp-action="Edit" asp-route-id="@Model?.Id" class="btn btn-outline-primary">
                <i class="fas fa-edit me-2"></i> Editar
            </a>
            <a asp-action="Index" class="btn btn-outline-secondary">
                <i class="fas fa-arrow-left me-2"></i> Regresar a la Lista
            </a>
        </div>
    </div>
</div>

<style>
    .bg-gradient {
        background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
        color: white;
    }

    .icon-circle {
        width: 40px;
        height: 40px;
        display: flex;
        justify-content: center;
        align-items: center;
        background-color: var(--primary-color);
        border-radius: 50%;
        color: white;
    }
</style>
