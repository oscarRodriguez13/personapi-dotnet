@model IEnumerable<personapi_dotnet.Models.Entities.Profesion>

@{
    ViewData["Title"] = "Gestión de Profesiones";
}

<div class="card shadow-sm fade-in mb-4">
    <div class="card-header bg-gradient d-flex justify-content-between align-items-center">
        <div class="d-flex align-items-center">
            <div class="icon-circle">
                <i class="fas fa-briefcase"></i>
            </div>
            <div>
                <h4 class="mb-0 fw-bold">Listado de Profesiones</h4>
                <p class="text-muted small mb-0">Administración de profesiones registradas</p>
            </div>
        </div>
        <a asp-action="Create" class="btn btn-light">
            <i class="fas fa-plus-circle me-2"></i>Agregar Nueva Profesión
        </a>
    </div>

    <div class="card-body">
        <div class="mb-3">
            <div class="input-group">
                <span class="input-group-text bg-light">
                    <i class="fas fa-search"></i>
                </span>
                <input type="text" id="searchInput" class="form-control" placeholder="Buscar profesión...">
            </div>
        </div>

        <div class="table-responsive">
            <table class="table table-hover align-middle" id="profesionesTable">
                <thead>
                    <tr>
                        <th><i class="fas fa-id-badge me-2 text-primary"></i>@Html.DisplayNameFor(model => model.Nom)</th>
                        <th><i class="fas fa-align-left me-2 text-primary"></i>@Html.DisplayNameFor(model => model.Des)</th>
                        <th class="text-center">Acciones</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>@Html.DisplayFor(modelItem => item.Nom)</td>
                            <td>@Html.DisplayFor(modelItem => item.Des)</td>
                            <td>
                                <div class="d-flex justify-content-center gap-2">
                                    <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-sm btn-outline-primary" data-bs-toggle="tooltip" title="Editar">
                                        <i class="fas fa-edit"></i>
                                    </a>
                                    <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-sm btn-outline-info" data-bs-toggle="tooltip" title="Ver detalles">
                                        <i class="fas fa-info-circle"></i>
                                    </a>
                                    <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-sm btn-outline-danger" data-bs-toggle="tooltip" title="Eliminar">
                                        <i class="fas fa-trash-alt"></i>
                                    </a>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <div id="noResults" class="alert alert-info text-center d-none mt-3">
            <i class="fas fa-info-circle me-2"></i>No se encontraron profesiones que coincidan con su búsqueda.
        </div>
    </div>

    <div class="card-footer text-muted">
        <div class="d-flex justify-content-between align-items-center">
            <span>Total: <strong>@Model.Count()</strong> profesiones</span>
            <div class="btn-group" role="group">
                <button type="button" class="btn btn-sm btn-outline-secondary" id="exportCSV">
                    <i class="fas fa-file-csv me-1"></i> Exportar CSV
                </button>
                <button type="button" class="btn btn-sm btn-outline-secondary" id="printTable">
                    <i class="fas fa-print me-1"></i> Imprimir
                </button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            // Tooltips
            const tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
            tooltipTriggerList.map(function (tooltipTriggerEl) {
                return new bootstrap.Tooltip(tooltipTriggerEl);
            });

            // Buscar en tabla
            const searchInput = document.getElementById('searchInput');
            const table = document.getElementById('profesionesTable');
            const rows = table.getElementsByTagName('tr');
            const noResults = document.getElementById('noResults');

            searchInput.addEventListener('keyup', function () {
                const searchTerm = searchInput.value.toLowerCase();
                let visibleCount = 0;

                for (let i = 1; i < rows.length; i++) {
                    const rowData = rows[i].textContent.toLowerCase();
                    if (rowData.includes(searchTerm)) {
                        rows[i].style.display = '';
                        visibleCount++;
                    } else {
                        rows[i].style.display = 'none';
                    }
                }

                if (visibleCount === 0) {
                    noResults.classList.remove('d-none');
                } else {
                    noResults.classList.add('d-none');
                }
            });

            // Exportar a CSV
            document.getElementById('exportCSV').addEventListener('click', function () {
                let csv = [];
                let rows = document.querySelectorAll('table tr');

                for (let i = 0; i < rows.length; i++) {
                    let row = [], cols = rows[i].querySelectorAll('td, th');

                    for (let j = 0; j < cols.length - 1; j++) {
                        row.push(cols[j].innerText);
                    }

                    csv.push(row.join(','));
                }

                downloadCSV(csv.join('\n'), 'profesiones.csv');
            });

            function downloadCSV(csv, filename) {
                let csvFile = new Blob([csv], { type: "text/csv" });
                let downloadLink = document.createElement("a");

                downloadLink.download = filename;
                downloadLink.href = window.URL.createObjectURL(csvFile);
                downloadLink.style.display = "none";
                document.body.appendChild(downloadLink);
                downloadLink.click();
            }

            // Imprimir
            document.getElementById('printTable').addEventListener('click', function () {
                window.print();
            });
        });
    </script>
}
