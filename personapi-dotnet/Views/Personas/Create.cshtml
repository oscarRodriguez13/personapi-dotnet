@model personapi_dotnet.Models.Entities.Persona
@{
    ViewData["Title"] = "Nueva Persona";
}

<div class="card shadow-sm fade-in">
    <div class="card-header bg-gradient d-flex align-items-center">
        <div class="icon-circle me-3">
            <i class="fas fa-user-plus"></i>
        </div>
        <div>
            <h4 class="mb-0 fw-bold">Crear Nueva Persona</h4>
            <p class="text-muted small mb-0">Complete el formulario para registrar una nueva persona</p>
        </div>
    </div>
    <div class="card-body">
        <form asp-action="Create" class="needs-validation" novalidate>
            <div asp-validation-summary="ModelOnly" class="alert alert-danger" role="alert"></div>

            <div class="row">
                <div class="col-md-6 mb-3">
                    <label asp-for="Cc" class="form-label">Cédula de Ciudadanía</label>
                    <div class="input-group">
                        <span class="input-group-text"><i class="fas fa-id-card"></i></span>
                        <input asp-for="Cc" class="form-control" placeholder="Ingrese el número de identificación" />
                    </div>
                    <span asp-validation-for="Cc" class="text-danger"></span>
                </div>

                <div class="col-md-6 mb-3">
                    <label asp-for="Edad" class="form-label">Edad</label>
                    <div class="input-group">
                        <span class="input-group-text"><i class="fas fa-birthday-cake"></i></span>
                        <input asp-for="Edad" class="form-control" type="number" min="0" max="120" placeholder="Ingrese la edad" />
                    </div>
                    <span asp-validation-for="Edad" class="text-danger"></span>
                </div>
            </div>

            <div class="row">
                <div class="col-md-6 mb-3">
                    <label asp-for="Nombre" class="form-label">Nombre</label>
                    <div class="input-group">
                        <span class="input-group-text"><i class="fas fa-user"></i></span>
                        <input asp-for="Nombre" class="form-control" placeholder="Ingrese el nombre" />
                    </div>
                    <span asp-validation-for="Nombre" class="text-danger"></span>
                </div>

                <div class="col-md-6 mb-3">
                    <label asp-for="Apellido" class="form-label">Apellido</label>
                    <div class="input-group">
                        <span class="input-group-text"><i class="fas fa-user"></i></span>
                        <input asp-for="Apellido" class="form-control" placeholder="Ingrese el apellido" />
                    </div>
                    <span asp-validation-for="Apellido" class="text-danger"></span>
                </div>
            </div>

            <div class="mb-3">
                <label asp-for="Genero" class="form-label">Género</label>
                <div class="input-group">
                    <span class="input-group-text"><i class="fas fa-venus-mars"></i></span>
                    <select asp-for="Genero" class="form-select">
                        <option value="">Seleccione un género</option>
                        <option value="M">Masculino</option>
                        <option value="F">Femenino</option>
                        <option value="O">Otro</option>
                    </select>
                </div>
                <span asp-validation-for="Genero" class="text-danger"></span>
            </div>

            <div class="d-flex justify-content-between mt-4">
                <a asp-action="Index" class="btn btn-outline-secondary">
                    <i class="fas fa-arrow-left me-2"></i>Volver al listado
                </a>
                <button type="submit" class="btn btn-primary">
                    <i class="fas fa-save me-2"></i>Guardar persona
                </button>
            </div>
        </form>
    </div>
</div>

<style>
    .bg-gradient {
        background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
        color: white;
    }

    .card .card-header {
        border-bottom: none;
    }

    .input-group-text {
        background-color: #f8f9fa;
        color: var(--primary-color);
    }

    to {
        opacity: 1;
        transform: translateY(0);
    }

    }

    .card {
        animation: cardEnter 0.5s ease-out;
    }
</style>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        // Validación del lado del cliente personalizada
        (function() {
            'use strict';

            // Fetch all forms we want to apply validation styles to
            var forms = document.querySelectorAll('.needs-validation');

            // Loop over them and prevent submission
            Array.prototype.slice.call(forms).forEach(function(form) {
                form.addEventListener('submit', function(event) {
                    if (!form.checkValidity()) {
                        event.preventDefault();
                        event.stopPropagation();
                    }

                    form.classList.add('was-validated');
                }, false);
            });
        })();
    </script>
}